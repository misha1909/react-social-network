{"version":3,"sources":["components/common/formControls/formControls.module.css","utilits/validators/validators.js","components/common/formControls/formControls.jsx","components/Login/login.module.css","components/Login/login.jsx"],"names":["module","exports","requiredField","value","maxLengthCreator","maxLength","length","FormControl","input","meta","touched","error","children","hasError","className","form_classes","formControl","textArea","props","restProps","child","Input","CreateField","placeholder","name","validators","component","text","abc","validate","ReduxLoginForm","reduxForm","form","handleSubmit","onSubmit","login_classes","loginForms","inputBox","inputBoxItem","type","check","summaryError","btn","connect","state","isAuth","auth","login","to","loginPage","title","formData","email","password","rememberMe"],"mappings":"uFACAA,EAAOC,QAAU,CAAC,YAAc,kCAAkC,MAAQ,4BAA4B,aAAe,mCAAmC,aAAe,mCAAmC,MAAQ,4BAA4B,IAAM,4B,iCCDpP,oEAAO,IAAMC,EAAgB,SAACC,GAC1B,OAAIA,OAAS,EACC,sBAELC,EAAmB,SAACC,GAAD,OAAe,SAACF,GAC5C,GAAIA,GAASA,EAAMG,OAASD,EACxB,MAAM,iBAAN,OAAwBA,EAAxB,e,0PCHFE,EAAc,SAAC,GAAkD,EAAhDC,MAAiD,IAAD,IAAzCC,KAAQC,EAAiC,EAAjCA,QAASC,EAAwB,EAAxBA,MAASC,EAAe,EAAfA,SAC9CC,EAAWH,GAAWC,EAC5B,OACI,gCAEI,qBAAKG,UAAWC,IAAaC,YAAc,KAAOH,EAAWE,IAAaJ,MAAQ,IAAlF,SACKC,IAEL,8BACKC,GAAY,+BAAOF,UAMvBM,EAAW,SAACC,GACrB,IAAQV,EAAqCU,EAArCV,MAAuBW,GAAcD,EAA9BT,KAA8BS,EAAxBE,MAArB,YAA6CF,EAA7C,IACA,OACI,cAACX,EAAD,2BAAiBW,GAAjB,aACI,oDAAcV,GAAUW,QAKvBE,EAAQ,SAACH,GAClB,IAAQV,EAAqCU,EAArCV,MAAuBW,GAAcD,EAA9BT,KAA8BS,EAAxBE,MAArB,YAA6CF,EAA7C,IACA,OACI,cAACX,EAAD,2BAAiBW,GAAjB,aACI,iDAAWV,GAAUW,QAMpBG,EAAc,SAACC,EAAaC,EAAMC,EAAYC,GAAhC,IAA2CR,EAA3C,uDAAmD,GAAIS,EAAvD,uDAA8D,GAA9D,OAEvB,sBAAKb,UAAWC,IAAaa,IAA7B,UAAkC,cAAC,IAAD,aAC9BF,UAAWA,EACXF,KAAMA,EACND,YAAaA,EACbM,SAAUJ,GACNP,IACLS,O,oBC5CP3B,EAAOC,QAAU,CAAC,UAAY,yBAAyB,MAAQ,qBAAqB,WAAa,0BAA0B,SAAW,wBAAwB,MAAQ,qBAAqB,IAAM,qB,iCCDjM,qHAyDM6B,EAAiBC,YAAU,CAAEC,KAAM,SAAlBD,EA5CL,SAAC,GAA6B,IAA3BE,EAA0B,EAA1BA,aAActB,EAAY,EAAZA,MAC/B,OACI,sBAAMuB,SAAUD,EAAhB,SACI,sBAAKnB,UAAWqB,IAAcC,WAA9B,UACI,qBAAKtB,UAAWqB,IAAcE,SAA9B,SACKf,YAAY,QAAS,QAASpB,IAAemB,IAAO,CAAEP,UAAWC,IAAauB,iBAOnF,qBAAKxB,UAAWqB,IAAcE,SAA9B,SACKf,YAAY,WAAY,WAAYpB,IAAemB,IAAO,CAAEkB,KAAM,WAAYzB,UAAWC,IAAauB,iBAQ3G,qBAAKxB,UAAWqB,IAAcK,MAA9B,SACKlB,YAAY,KAAM,aAAc,KAAM,QAAS,CAAEiB,KAAM,WAAYzB,UAAWC,IAAayB,OAAS,iBAOzG,qBAAK1B,UAAWqB,IAAcK,MAA9B,SACKlB,YAAY,KAAM,eAAgB,KAAM,QAAS,CAC9CiB,KAAM,WACNzB,UAAWC,IAAayB,OACzB,mBAEN7B,GAAS,qBAAKG,UAAWH,EAAM8B,aAAtB,SACL9B,IAEL,wBAAQG,UAAWqB,IAAcO,IAAjC,2BA2BDC,uBAHS,SAACC,GAAD,MAAY,CAChCC,OAAQD,EAAME,KAAKD,UAEiB,CAAEE,WAA3BJ,EApBD,SAACzB,GAKX,OAAIA,EAAM2B,OACC,cAAC,IAAD,CAAUG,GAAI,aAGrB,sBAAKlC,UAAWqB,IAAcc,UAA9B,UACI,oBAAInC,UAAWqB,IAAce,MAA7B,mBACA,cAACpB,EAAD,CAAgBI,SATP,SAACiB,GACdjC,EAAM6B,MAAMI,EAASC,MAAOD,EAASE,SAAUF,EAASG","file":"static/js/7.fe78f937.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"formControls_formControl__uGNGJ\",\"error\":\"formControls_error__3Vbey\",\"summaryError\":\"formControls_summaryError__3O_ee\",\"inputBoxItem\":\"formControls_inputBoxItem__ny-PD\",\"check\":\"formControls_check__2wHHM\",\"abc\":\"formControls_abc__29x1A\"};","export const requiredField = (value) => {\r\n    if (value) { return undefined }\r\n    else { return 'Field is required!' }\r\n}\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value && value.length > maxLength) {\r\n        return `Max length is ${maxLength} symbols`\r\n    }\r\n}","import React from 'react'\r\nimport { Field } from 'redux-form'\r\nimport form_classes from './formControls.module.css'\r\nconst FormControl = ({ input, meta: { touched, error }, children }) => {\r\n    const hasError = touched && error\r\n    return (\r\n        <div>\r\n\r\n            <div className={form_classes.formControl + \" \" + (hasError ? form_classes.error : '')}>\r\n                {children}\r\n            </div>\r\n            <div>\r\n                {hasError && <span>{error}</span>}\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\nexport const textArea = (props) => {\r\n    const { input, meta, child, ...restProps } = props\r\n    return (\r\n        <FormControl {...props}>\r\n            <textarea {...input}{...restProps} />\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const { input, meta, child, ...restProps } = props\r\n    return (\r\n        <FormControl {...props}>\r\n            <input {...input}{...restProps} />\r\n        </FormControl>\r\n\r\n    )\r\n}\r\n\r\nexport const CreateField = (placeholder, name, validators, component, props = {}, text = \"\") => (\r\n\r\n    <div className={form_classes.abc}><Field\r\n        component={component}\r\n        name={name}\r\n        placeholder={placeholder}\r\n        validate={validators}\r\n        {...props}\r\n    />{text}\r\n    </div>\r\n)","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginPage\":\"login_loginPage__1sJvZ\",\"title\":\"login_title__13nbd\",\"loginForms\":\"login_loginForms__2adIu\",\"inputBox\":\"login_inputBox__25L0i\",\"check\":\"login_check__4OGvW\",\"btn\":\"login_btn__2OW8B\"};","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router'\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport { requiredField } from '../../utilits/validators/validators'\r\nimport { CreateField, Input } from '../common/formControls/formControls'\r\nimport './../../null.css'\r\nimport { login } from '../../redux/authReducer'\r\nimport login_classes from './login.module.css'\r\nimport form_classes from './../common/formControls/formControls.module.css'\r\nimport error from './../common/formControls/formControls.module.css'\r\n\r\n\r\nconst LoginForm = ({ handleSubmit, error }) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div className={login_classes.loginForms}>\r\n                <div className={login_classes.inputBox}>\r\n                    {CreateField(\"Email\", 'email', requiredField, Input, { className: form_classes.inputBoxItem })}\r\n                    {/* <Field\r\n                    component={Input}\r\n                    name={'email'}\r\n                    placeholder={\"Email\"}\r\n                    validate={requiredField} /> */}\r\n                </div>\r\n                <div className={login_classes.inputBox}>\r\n                    {CreateField(\"Password\", 'password', requiredField, Input, { type: \"password\", className: form_classes.inputBoxItem })}\r\n                    {/* <Field\r\n                    component={Input}\r\n                    name={'password'}\r\n                    placeholder={\"Password\"}\r\n                    validate={requiredField}\r\n                    type={\"password\"} /> */}\r\n                </div>\r\n                <div className={login_classes.check}>\r\n                    {CreateField(null, 'rememberMe', null, 'input', { type: \"checkbox\", className: form_classes.check }, \"Remember me\")}\r\n                    {/* <Field\r\n                    component={'input'}\r\n                    name={'rememberMe'}\r\n                    type={\"checkbox\"} />Remember me */}\r\n\r\n                </div>\r\n                <div className={login_classes.check}>\r\n                    {CreateField(null, 'showPassword', null, 'input', {\r\n                        type: \"checkbox\",\r\n                        className: form_classes.check,\r\n                    }, \"Show password\")}\r\n                </div>\r\n                {error && <div className={error.summaryError}>\r\n                    {error}\r\n                </div>}\r\n                <button className={login_classes.btn}>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst ReduxLoginForm = reduxForm({ form: 'login' })(LoginForm)\r\nconst Login = (props) => {\r\n\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe)\r\n    }\r\n    if (props.isAuth) {\r\n        return <Redirect to={'/profile'} />\r\n    }\r\n    return (\r\n        <div className={login_classes.loginPage}>\r\n            <h1 className={login_classes.title}>LOGIN</h1>\r\n            <ReduxLoginForm onSubmit={onSubmit} />\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\nexport default connect(mapStateToProps, { login })(Login)"],"sourceRoot":""}
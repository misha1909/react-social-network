{"version":3,"sources":["components/common/formControls/formControls.module.css","utilits/validators/validators.js","components/common/formControls/formControls.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogItem/dialogItem.module.css","components/Dialogs/dialogs.module.css","components/Dialogs/Message/message.module.css","components/Dialogs/DialogItem/dialogItem.jsx","components/Dialogs/Message/message.jsx","components/Dialogs/dialogs.jsx","components/Dialogs/dialogsContainer.jsx"],"names":["module","exports","requiredField","value","maxLengthCreator","maxLength","length","FormControl","input","meta","touched","error","children","hasError","className","form_classes","formControl","textArea","props","restProps","child","Input","CreateField","placeholder","name","validators","component","text","abc","validate","mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","to","React","connect","DialogItem","path","id","dialogs_classes","dialog","activeClassName","active","Message","message","messageAva","src","alt","NewMessageForm","reduxForm","form","onSubmit","handleSubmit","Field","writeMessage","Dialogs","dialogsPage","dialogsElements","dialogsData","map","messageElements","messagesData","dialogs","title","dialogItems","messages","values","addMessage","newMessage","compose","dispatch","addMessageCreator"],"mappings":"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","file":"static/js/5.d8bc62d9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"formControls_formControl__uGNGJ\",\"error\":\"formControls_error__3Vbey\",\"summaryError\":\"formControls_summaryError__3O_ee\",\"inputBoxItem\":\"formControls_inputBoxItem__ny-PD\",\"check\":\"formControls_check__2wHHM\",\"abc\":\"formControls_abc__29x1A\"};","export const requiredField = (value) => {\r\n    if (value) { return undefined }\r\n    else { return 'Field is required!' }\r\n}\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value && value.length > maxLength) {\r\n        return `Max length is ${maxLength} symbols`\r\n    }\r\n}","import React from 'react'\r\nimport { Field } from 'redux-form'\r\nimport form_classes from './formControls.module.css'\r\nconst FormControl = ({ input, meta: { touched, error }, children }) => {\r\n    const hasError = touched && error\r\n    return (\r\n        <div>\r\n\r\n            <div className={form_classes.formControl + \" \" + (hasError ? form_classes.error : '')}>\r\n                {children}\r\n            </div>\r\n            <div>\r\n                {hasError && <span>{error}</span>}\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\nexport const textArea = (props) => {\r\n    const { input, meta, child, ...restProps } = props\r\n    return (\r\n        <FormControl {...props}>\r\n            <textarea {...input}{...restProps} />\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const { input, meta, child, ...restProps } = props\r\n    return (\r\n        <FormControl {...props}>\r\n            <input {...input}{...restProps} />\r\n        </FormControl>\r\n\r\n    )\r\n}\r\n\r\nexport const CreateField = (placeholder, name, validators, component, props = {}, text = \"\") => (\r\n\r\n    <div className={form_classes.abc}><Field\r\n        component={component}\r\n        name={name}\r\n        placeholder={placeholder}\r\n        validate={validators}\r\n        {...props}\r\n    />{text}\r\n    </div>\r\n)","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from 'react-router-dom'\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/login' />\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n    return ConnectedRedirectComponent\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"dialogItem_dialog__14G_F\",\"active\":\"dialogItem_active__11Nun\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"dialogs_dialogs__3JJHG\",\"title\":\"dialogs_title__1Bi5u\",\"dialogItems\":\"dialogs_dialogItems__223mz\",\"active\":\"dialogs_active__1EhKE\",\"writeMessage\":\"dialogs_writeMessage__3CQDh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"message_message__PlxO7\",\"messageAva\":\"message_messageAva__3m0ss\"};","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport dialogs_classes from \"./dialogItem.module.css\"\r\nlet DialogItem = (props) => {\r\n    let path = (\"/dialogs/\" + props.id)\r\n    return (\r\n        <div className={dialogs_classes.dialog} >\r\n            <NavLink to={path} activeClassName={dialogs_classes.active}>{props.name}</NavLink>\r\n        </div >\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default DialogItem","import React from 'react'\r\nimport dialogs_classes from \"./message.module.css\"\r\nimport './../../../null.css'\r\n\r\nlet Message = (props) => {\r\n\r\n    return (\r\n        <div className={dialogs_classes.message}>\r\n            <div className={dialogs_classes.messageAva}><img src=\"https://w7.pngwing.com/pngs/295/985/png-transparent-mr-krabs-patrick-star-squidward-tentacles-spongebob-squarepants-plankton-and-karen-others.png\" alt=\"\" /></div>\r\n            {props.message}\r\n        </div>\r\n    )\r\n}\r\nexport default Message","import React from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport DialogItem from './DialogItem/dialogItem'\r\nimport dialogs_classes from \"./dialogs.module.css\"\r\nimport Message from './Message/message'\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport { maxLengthCreator, requiredField } from './../../utilits/validators/validators'\r\nimport { textArea } from '../common/formControls/formControls'\r\n\r\n\r\nlet Dialogs = (props) => {\r\n    let state = props.dialogsPage\r\n    let dialogsElements = state.dialogsData.map(dialog => <DialogItem name={dialog.name} id={dialog.id} />)\r\n    let messageElements = state.messagesData.map(message => <Message message={message.message} id={message.id} />)\r\n\r\n\r\n    const addNewMessage = (values) => {\r\n        props.addMessage(values.newMessage)\r\n    }\r\n\r\n    if (!props.isAuth) {\r\n        return (\r\n            <Redirect to='/login' />\r\n        )\r\n    }\r\n    return (\r\n        <div className={dialogs_classes.dialogs}>\r\n            <div className={dialogs_classes.title}>Dialogs</div>\r\n            <div className={dialogs_classes.dialogItems}>{\r\n                dialogsElements\r\n            }\r\n            </div>\r\n            <div className={dialogs_classes.messages}>\r\n                {messageElements}\r\n                <NewMessageForm onSubmit={addNewMessage} />\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\nconst maxLength = maxLengthCreator(5)\r\nconst NewMessage = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} >\r\n\r\n            <Field\r\n                className={dialogs_classes.writeMessage}\r\n                component={textArea}\r\n                placeholder='Enter message...'\r\n                name=\"newMessage\"\r\n                validate={[requiredField, maxLength]} />\r\n            <button >Send</button>\r\n        </form>\r\n    )\r\n}\r\nconst NewMessageForm = reduxForm({\r\n    form: 'message'\r\n})\r\n    (NewMessage)\r\nexport default Dialogs","\r\nimport { connect } from 'react-redux'\r\nimport { compose } from 'redux'\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect'\r\nimport { addMessageCreator } from '../../redux/dialogsReducer'\r\nimport Dialogs from './dialogs'\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n\r\n    return {\r\n\r\n        addMessage: (newMessage) => {\r\n            dispatch(addMessageCreator(newMessage))\r\n        }\r\n    }\r\n}\r\n\r\nexport default\r\n\r\n    compose(\r\n        connect(mapStateToProps, mapDispatchToProps),\r\n        withAuthRedirect\r\n    )(Dialogs)\r\n\r\n\r\n"],"sourceRoot":""}